[Connection]
# Location of the file that has the OAuth credentials to login to the Yahoo!
# service.  This file can be generated with the init_oauth_env.py script.
oauthFile = oauth2.json

[Cache]
# Location of where to keep the cache files.  These files are used by the
# program to save data taken from web API endpoints.  They help reduce the number
# of requests sent.
dir = .cache/
# The amount of minutes before the free agent cache is invalidated.  When this
# expires we pull the latest set of free agents down.
freeAgentExpiry = 60
# The amount of minutes before the cached prediction builder instance will
# expiry.  When this expires we build the prediction builder from scratch.
predictionBuilderExpiry = 1440

[League]
# The league ID to work on.  You can get the league id using the example/leagues.py
# script.
id = 0
# The leagues positions that each team must fill.  Each position is delimited
# with a comma.  The positino names are the short names (e.g. SS for shortstop)
positions = "C,1B,2B,SS,3B,LF,CF,RF,Util,SP,SP,SP,SP,SP,RP,RP,RP,RP,RP"
# The league stat categories that we are able to predict.  This can be a subset
# of the actual stat cateogires in the Yahoo! league.  We can avoid stats that
# are not represented in the predicted stats that we use.
predictedStatCategories = "OBP,AVG,HR,R,RBI,SB,W,SV,HLD,ERA,WHIP,SO"
# The leagues number of bench spots
benchSpots = 2
# The leagues number of injury reserve spots
irSpots = 3

# This section allows you to specify the class to use for prediction of the
# stats for the players.
[Prediction]
# Leave this to the package within this repo unless you have built your own
builderPackage=yahoo_fantasy_bot
# This repo offers two types prediction system:
# - MLB use .mlb
# - NHL use .nhl
builderModule=.mlb
# The class loader is a function that produces a class for the prediction
# builder.  It takes two arguments: yahoo_fantasy_api.League object and
# configparser.  The prediction builder object has one API that must exist:
# predict().  The first positional argument must be a roster.Container object.
# The remaining arguments are all named and are dependent on the
# PredictionNamedArguments section below.
builderClassLoader=init_prediction_builder
# What column within the predicted stats DataFrame that can be used to filter
# out duplicates.
indexColumn=MLBAM ID

# This section specifies the arguments to use with the predict() function.  All
# of these are named arguments passed in.
[PredictionNamedArguments]

# This section allows you to select the class to display of players to the
# screen.
[Display]
package=yahoo_fantasy_bot
module=.mlb
# The class is instanitated with a single configparser.  The class implements
# the following functions:
# - printRoster(roster)
class=PlayerPrinter

# This section allows you to select the class to handle scoring of a roster.
[Scorer]
package=yahoo_fantasy_bot
module=.mlb
# The class is instantiated with a single argument, configparser.  It must
# implement the following functions:
# - summarize(DataFrame predictedStats) : DataFrame
# - is_counting_stat(stat) : bool
# - is_highest_better(stat) : bool
class=Scorer
